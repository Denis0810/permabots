# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-15 11:28
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('microbot', '0002_auto_20160414_1051'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('name', models.CharField(db_index=True, help_text='Name for the bot', max_length=100, verbose_name='Name')),
                ('owner', models.ForeignKey(help_text='User who owns the bot', on_delete=django.db.models.deletion.CASCADE, related_name='bots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bot',
                'verbose_name_plural': 'Bots',
            },
        ),
        migrations.AlterModelOptions(
            name='telegramchatstate',
            options={'verbose_name': 'Telegram Chats States'},
        ),
        migrations.RemoveField(
            model_name='telegrambot',
            name='owner',
        ),
        migrations.AlterField(
            model_name='environmentvar',
            name='bot',
            field=models.ForeignKey(help_text='Bot which variable is attached.', on_delete=django.db.models.deletion.CASCADE, related_name='env_vars', to='microbot.Bot', verbose_name='Bot'),
        ),
        migrations.AlterField(
            model_name='handler',
            name='bot',
            field=models.ForeignKey(help_text='Bot which Handler is attached to', on_delete=django.db.models.deletion.CASCADE, related_name='handlers', to='microbot.Bot', verbose_name='Bot'),
        ),
        migrations.AlterField(
            model_name='hook',
            name='bot',
            field=models.ForeignKey(help_text='Bot which Hook is attached', on_delete=django.db.models.deletion.CASCADE, related_name='hooks', to='microbot.Bot', verbose_name='Bot'),
        ),
        migrations.AlterField(
            model_name='state',
            name='bot',
            field=models.ForeignKey(help_text='Bot which state is attached to', on_delete=django.db.models.deletion.CASCADE, related_name='states', to='microbot.Bot', verbose_name='Bot'),
        ),
        migrations.AlterField(
            model_name='telegrambot',
            name='enabled',
            field=models.BooleanField(default=True, help_text='Enable/disable telegram bot', verbose_name='Enable'),
        ),
        migrations.AlterField(
            model_name='telegrambot',
            name='user_api',
            field=models.OneToOneField(blank=True, help_text='Telegram API info. Automatically retrieved from Telegram', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='telegram_bot', to='microbot.User', verbose_name='Telegram Bot User'),
        ),
        migrations.AlterField(
            model_name='telegramrecipient',
            name='hook',
            field=models.ForeignKey(help_text='Hook which recipient is attached to', on_delete=django.db.models.deletion.CASCADE, related_name='telegram_recipients', to='microbot.Hook', verbose_name='Hook'),
        ),
        migrations.AddField(
            model_name='bot',
            name='telegram_bot',
            field=models.OneToOneField(blank=True, help_text='Telegram Bot', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bot', to='microbot.TelegramBot', verbose_name='Telegram Bot'),
        ),
    ]
